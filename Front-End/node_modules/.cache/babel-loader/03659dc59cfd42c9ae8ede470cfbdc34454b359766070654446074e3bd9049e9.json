{"ast":null,"code":"var _jsxFileName = \"/Users/ryanclark/Desktop/climatecomparer/src/pages/Add.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Add = () => {\n  _s();\n  const [city, onCityChange] = useState('');\n  const [state, onStateChange] = useState('');\n  async function sendData() {\n    city = city;\n    state = state;\n    const data = {\n      city: city,\n      state: state\n    };\n    const response = await fetch(\"http://localhost:3002/weather\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n\n    // Clear any existing table\n    const resultDiv = document.getElementById(\"result\");\n    while (resultDiv.firstChild) {\n      resultDiv.removeChild(resultDiv.firstChild);\n    }\n\n    // Create a new table element\n    const table = document.createElement(\"table\");\n    resultDiv.appendChild(table);\n\n    // Create the header row\n    const headerRow = document.createElement(\"tr\");\n    table.appendChild(headerRow);\n    const keys = Object.keys(result);\n    const monthNames = Object.keys(result[keys[0]]);\n    monthNames.unshift(\"\"); // Add an empty cell for the first column\n    monthNames.forEach(monthName => {\n      const headerCell = document.createElement(\"th\");\n      headerCell.textContent = monthName;\n      headerRow.appendChild(headerCell);\n    });\n\n    // Create the data rows\n    keys.forEach(key => {\n      const dataRow = document.createElement(\"tr\");\n      table.appendChild(dataRow);\n      const rowData = result[key];\n      const dataValues = Object.values(rowData);\n      dataValues.unshift(key); // Add the month name to the first column\n      dataValues.forEach(dataValue => {\n        const dataCell = document.createElement(\"td\");\n        dataCell.textContent = dataValue;\n        dataRow.appendChild(dataCell);\n      });\n    });\n  }\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"Enter city\",\n        onChange: onCityChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"state\",\n        placeholder: \"Enter state\",\n        onChange: e => onStateChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => sendData(e.target.value),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Add, \"W3hdo9sk1/fFICYLS4xh+bbAiBI=\");\n_c = Add;\nexport default Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["React","useState","useEffect","Add","city","onCityChange","state","onStateChange","sendData","data","response","fetch","method","headers","body","JSON","stringify","result","json","resultDiv","document","getElementById","firstChild","removeChild","table","createElement","appendChild","headerRow","keys","Object","monthNames","unshift","forEach","monthName","headerCell","textContent","key","dataRow","rowData","dataValues","values","dataValue","dataCell","e","target","value"],"sources":["/Users/ryanclark/Desktop/climatecomparer/src/pages/Add.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\n\nconst Add = () => {\n    const [city, onCityChange ]  = useState('');\n    const [state, onStateChange ]  = useState('');\n\n    async function sendData() {\n        city = city\n        state = state\n        const data = {\n            city: city,\n            state: state\n        };\n    \n        const response = await fetch(\"http://localhost:3002/weather\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n    \n        const result = await response.json();\n    \n        // Clear any existing table\n        const resultDiv = document.getElementById(\"result\");\n        while (resultDiv.firstChild) {\n            resultDiv.removeChild(resultDiv.firstChild);\n        }\n    \n        // Create a new table element\n        const table = document.createElement(\"table\");\n        resultDiv.appendChild(table);\n    \n        // Create the header row\n        const headerRow = document.createElement(\"tr\");\n        table.appendChild(headerRow);\n        const keys = Object.keys(result);\n        const monthNames = Object.keys(result[keys[0]]);\n        monthNames.unshift(\"\"); // Add an empty cell for the first column\n        monthNames.forEach(monthName => {\n            const headerCell = document.createElement(\"th\");\n            headerCell.textContent = monthName;\n            headerRow.appendChild(headerCell);\n        });\n    \n        // Create the data rows\n        keys.forEach(key => {\n            const dataRow = document.createElement(\"tr\");\n            table.appendChild(dataRow);\n            const rowData = result[key];\n            const dataValues = Object.values(rowData);\n            dataValues.unshift(key); // Add the month name to the first column\n            dataValues.forEach(dataValue => {\n                const dataCell = document.createElement(\"td\");\n                dataCell.textContent = dataValue;\n                dataRow.appendChild(dataCell);\n            });\n        });\n    }\n    \n    useEffect(()=> {\n    }, []);\n\n    return(\n        <>\n        <h3>Add</h3>\n        <div>\n            <input type=\"text\" id=\"city\" \n             placeholder={\"Enter city\"}\n            onChange={onCityChange}/>\n\n            <input type=\"text\" id=\"state\" \n            placeholder={\"Enter state\"}\n            onChange={e =>onStateChange(e.target.value)}/>\n\n            <button onClick={e => sendData(e.target.value)}>Submit</button>\n            <div id=\"result\"></div>\n        </div>\n         \n        </>\n    );\n}\n\nexport default Add;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}