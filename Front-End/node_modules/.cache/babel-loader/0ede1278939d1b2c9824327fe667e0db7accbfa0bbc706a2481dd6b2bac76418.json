{"ast":null,"code":"var _jsxFileName = \"/Users/ryanclark/Desktop/climatecomparer/Front-End/src/pages/Add.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Firebase from '../components/Firebase';\nimport { doc, setDoc } from \"firebase/firestore\";\n\n// const PORT = process.env.PORT;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Add = () => {\n  _s();\n  //React code to update DB*******************\n  const [reactCity, setCity] = useState('');\n  const [reactState, setState] = useState('');\n  const [reactResult, setResult] = useState(''); //includes all climate data \n  const history = useNavigate();\n  const addClimate = async (reactCity, reactState, reactResult) => {\n    const saveToFirebase = Firebase.firestore();\n    saveToFirebase.collection(\"ClimateComparer\").add({\n      id: (reactCity, reactState),\n      item: reactResult\n    });\n  };\n\n  // const addClimate = async () => {\n  //     const newCityClimate = {reactCity, reactState, reactResult};\n  //     const response = await fetch(PORT, {\n  //         method: 'post',\n  //         body: JSON.stringify(newCityClimate),\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //         },\n  //     });\n  //     if(response.status === 201){\n  //         alert(\"Successfully added the City Climate!\");\n  //     } else {\n  //         alert(`Failed to add cityClimate, status code = ${response.status}`);\n  //     }\n  //     history.push(\"/\");\n  // };\n\n  //UI for Microservice to fetch city Climate data*********** \n  async function sendData() {\n    const city = document.getElementById(\"city\").value;\n    const state = document.getElementById(\"state\").value;\n    const data = {\n      city: city,\n      state: state\n    };\n    setState(state);\n    setCity(city);\n    const response = await fetch(\"http://localhost:3001/weather\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    setResult(result);\n    console.log(\"Result:\", reactCity, reactState, reactResult);\n    addClimate();\n\n    // Clear any existing table\n    const resultDiv = document.getElementById(\"result\");\n    while (resultDiv.firstChild) {\n      resultDiv.removeChild(resultDiv.firstChild);\n    }\n\n    // Create a new table element\n    const table = document.createElement(\"table\");\n    resultDiv.appendChild(table);\n\n    // Create the header row\n    const headerRow = document.createElement(\"tr\");\n    table.appendChild(headerRow);\n    const keys = Object.keys(result);\n    const monthNames = Object.keys(result[keys[0]]);\n    monthNames.unshift(\"\"); // Add an empty cell for the first column\n    monthNames.forEach(monthName => {\n      const headerCell = document.createElement(\"th\");\n      headerCell.textContent = monthName;\n      headerRow.appendChild(headerCell);\n    });\n\n    // Create the data rows\n    keys.forEach(key => {\n      const dataRow = document.createElement(\"tr\");\n      table.appendChild(dataRow);\n      const rowData = result[key];\n      const dataValues = Object.values(rowData);\n      dataValues.unshift(key); // Add the month name to the first column\n      dataValues.forEach(dataValue => {\n        const dataCell = document.createElement(\"td\");\n        dataCell.textContent = dataValue;\n        dataRow.appendChild(dataCell);\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"city\",\n      placeholder: \"Enter city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"state\",\n      placeholder: \"Enter state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendData,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Add, \"MhyIBCFMFwyH2SfCb5C6Zqsfq+A=\", false, function () {\n  return [useNavigate];\n});\n_c = Add;\nexport default Add;\n\n// Styling\nconst container = {\n  width: 500,\n  margin: '50px auto'\n};\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["React","useState","useNavigate","Firebase","doc","setDoc","Add","reactCity","setCity","reactState","setState","reactResult","setResult","history","addClimate","saveToFirebase","firestore","collection","add","id","item","sendData","city","document","getElementById","value","state","data","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","resultDiv","firstChild","removeChild","table","createElement","appendChild","headerRow","keys","Object","monthNames","unshift","forEach","monthName","headerCell","textContent","key","dataRow","rowData","dataValues","values","dataValue","dataCell","container","width","margin"],"sources":["/Users/ryanclark/Desktop/climatecomparer/Front-End/src/pages/Add.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Firebase from '../components/Firebase';\nimport { doc, setDoc } from \"firebase/firestore\"; \n\n\n// const PORT = process.env.PORT;\n\n\nconst Add = () => {\n\n    //React code to update DB*******************\n    const [reactCity, setCity]        = useState('');\n    const [reactState, setState]      = useState('');\n    const [reactResult, setResult]    = useState(''); //includes all climate data \n    const history = useNavigate();\n\n\n    const addClimate = async (reactCity, reactState, reactResult) => {\n        const saveToFirebase = Firebase.firestore();\n        saveToFirebase.collection(\"ClimateComparer\").add({\n            id: (reactCity, reactState),\n            item: reactResult\n        });\n        };\n\n    // const addClimate = async () => {\n    //     const newCityClimate = {reactCity, reactState, reactResult};\n    //     const response = await fetch(PORT, {\n    //         method: 'post',\n    //         body: JSON.stringify(newCityClimate),\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //     });\n    //     if(response.status === 201){\n    //         alert(\"Successfully added the City Climate!\");\n    //     } else {\n    //         alert(`Failed to add cityClimate, status code = ${response.status}`);\n    //     }\n    //     history.push(\"/\");\n    // };\n\n\n    //UI for Microservice to fetch city Climate data*********** \n    async function sendData() {\n        const city = document.getElementById(\"city\").value;\n        const state = document.getElementById(\"state\").value;\n\n        const data = {\n            city: city,\n            state: state\n        };\n        setState(state)\n        setCity(city)\n\n\n        const response = await fetch(\"http://localhost:3001/weather\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n\n        const result = await response.json();\n        setResult(result)\n        console.log(\"Result:\", reactCity, reactState, reactResult)\n        addClimate()\n\n        // Clear any existing table\n        const resultDiv = document.getElementById(\"result\");\n        while (resultDiv.firstChild) {\n            resultDiv.removeChild(resultDiv.firstChild);\n        }\n\n        // Create a new table element\n        const table = document.createElement(\"table\");\n        resultDiv.appendChild(table);\n\n        // Create the header row\n        const headerRow = document.createElement(\"tr\");\n        table.appendChild(headerRow);\n        const keys = Object.keys(result);\n        const monthNames = Object.keys(result[keys[0]]);\n        monthNames.unshift(\"\"); // Add an empty cell for the first column\n        monthNames.forEach(monthName => {\n            const headerCell = document.createElement(\"th\");\n            headerCell.textContent = monthName;\n            headerRow.appendChild(headerCell);\n        });\n\n        // Create the data rows\n        keys.forEach(key => {\n            const dataRow = document.createElement(\"tr\");\n            table.appendChild(dataRow);\n            const rowData = result[key];\n            const dataValues = Object.values(rowData);\n            dataValues.unshift(key); // Add the month name to the first column\n            dataValues.forEach(dataValue => {\n                const dataCell = document.createElement(\"td\");\n                dataCell.textContent = dataValue;\n                dataRow.appendChild(dataCell);\n            });\n        });\n        \n    }\n\n    return (\n   \n        <div>\n            <input type=\"text\" id=\"city\" placeholder=\"Enter city\"/>\n            <input type=\"text\" id=\"state\" placeholder=\"Enter state\"/>\n            <button onClick={sendData}>Submit</button>\n            <div id=\"result\"></div>\n        </div>\n      );\n    };\n\n   \nexport default Add;\n\n// Styling\nconst container = {\n    width: 500,\n    margin: '50px auto'\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}