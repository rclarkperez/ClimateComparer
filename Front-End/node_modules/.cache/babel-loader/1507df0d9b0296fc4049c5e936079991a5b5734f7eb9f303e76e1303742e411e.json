{"ast":null,"code":"var _jsxFileName = \"/Users/ryanclark/Desktop/climatecomparer/Front-End/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { firestore } from '../components/Firebase';\nimport { collection, addDoc, getDocs, query, where, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [climate, setClimate] = useState([]); //list taken from firebase DB\n  const [currentCity, setcurrentCity] = useState('');\n  const [currentState, setcurrentState] = useState('');\n  const [currentCityClimateTD, setcurrentCityClimate] = useState([]);\n  const [currentCityClimateTR, setcurrentCityValues] = useState([]);\n  const change = async event => {\n    setcurrentCity(event.target.value);\n    DisplayData();\n  };\n\n  //get all climates from firebase db\n  const FetchClimates = async () => {\n    await getDocs(collection(firestore, \"cityClimate\")).then(querySnapshot => {\n      const newData = querySnapshot.docs.sort().map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setClimate(newData);\n      console.log(\"new data: \", newData);\n    });\n  };\n  const DisplayData = () => {\n    for (let i = 0; i <= climate.length - 1; i++) {\n      //if value is found, iterate though object and create a table \n      if (climate[i].city == currentCity) {\n        console.log('su9ccess!', climate[i].result);\n        setcurrentState(climate[i].state);\n        for (const [key, value] of Object.entries(climate[i].result)) {\n          console.log(key, value);\n          // setcurrentCityClimate(climate[i].result)\n          currentCityClimateTD.push(key);\n          currentCityClimateTR.push(value);\n          //make new TR and TH data points and make table below\n        }\n      } else {\n        console.log('failure');\n      }\n    }\n  };\n\n  // Start the fetch operation as soon as\n  // the page loads\n  useEffect(() => {\n    FetchClimates();\n    DisplayData();\n  }, [currentCity, currentCityClimateTD, currentCityClimateTR, currentState]);\n  console.log(\"currentCityClimate\", currentCityClimateTD);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"about\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Random Latin filler words...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"get-started\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Get Started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Random Latin filler words....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        id: \"left-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          children: \"****Map Goes Here****\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a city and country and get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => setcurrentCity(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), climate.map(obj => /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"item\",\n          children: obj.city\n        }, obj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"See Climate Data Here:\", ' ' + currentCity + ',  ' + currentState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentCityClimateTD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"wNtxIp6QzsPORLuYsA0JqAo7kzk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","firestore","collection","addDoc","getDocs","query","where","onSnapshot","Home","climate","setClimate","currentCity","setcurrentCity","currentState","setcurrentState","currentCityClimateTD","setcurrentCityClimate","currentCityClimateTR","setcurrentCityValues","change","event","target","value","DisplayData","FetchClimates","then","querySnapshot","newData","docs","sort","map","doc","data","id","console","log","i","length","city","result","state","key","Object","entries","push","obj"],"sources":["/Users/ryanclark/Desktop/climatecomparer/Front-End/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useHistory } from 'react-router-dom';\nimport { firestore } from '../components/Firebase';\nimport { collection, addDoc, getDocs, query, where, onSnapshot } from \"firebase/firestore\";\n\n\n\nconst Home = () => {\n    const [climate, setClimate] = useState([]) //list taken from firebase DB\n    const [currentCity, setcurrentCity] = useState('')\n    const [currentState, setcurrentState] = useState('')\n\n    const [currentCityClimateTD, setcurrentCityClimate] = useState([])\n    const [currentCityClimateTR, setcurrentCityValues] = useState([])\n\n\n    const change = async (event) => {\n        setcurrentCity(event.target.value)\n        DisplayData()\n\n    }\n\n    //get all climates from firebase db\n      const FetchClimates = async () => {\n        await getDocs(collection(firestore, \"cityClimate\"))\n            .then((querySnapshot) => {\n                const newData = querySnapshot.docs.sort()\n                    .map((doc) => ({...doc.data(), id: doc.id}));\n                setClimate(newData)\n                console.log(\"new data: \", newData)\n\n            })\n    }\n\n    const DisplayData =  () => {\n        for (let i =0; i<=climate.length-1; i++){\n            //if value is found, iterate though object and create a table \n            if(climate[i].city == currentCity){\n                console.log('su9ccess!', climate[i].result)\n                setcurrentState(climate[i].state)\n                for (const [key, value] of Object.entries(climate[i].result)) {\n                    console.log(key, value);\n                    // setcurrentCityClimate(climate[i].result)\n                    currentCityClimateTD.push(key)\n                    currentCityClimateTR.push(value)\n                    //make new TR and TH data points and make table below\n                }\n            }\n            else{\n                console.log('failure')\n            }\n            }\n    }\n\n      // Start the fetch operation as soon as\n    // the page loads\n    useEffect(() => {\n        FetchClimates();\n        DisplayData();\n    }, [currentCity, currentCityClimateTD, currentCityClimateTR, currentState])\n    \n    console.log(\"currentCityClimate\",currentCityClimateTD)\n    return (\n    <>\n        <section id='about'>\n        <h3>About</h3>\n        <p>Random Latin filler words...</p>\n    </section>\n\n    <section id='get-started'>\n        <h3>Get Started!</h3>\n        <p>Random Latin filler words....</p>\n\n        <div className=\"column\" id=\"left-column\">   \n            <div id ='map'>****Map Goes Here****</div>\n        </div>\n\n        <p>Select a city and country and get started!</p>\n\n        <select\n        onChange={((event) => setcurrentCity(event.target.value))}\n        >\n        <option>City</option>\n        {climate.map((obj) =>(\n            <option\n                className=\"item\"\n                key = {obj.id}\n                >\n                    {obj.city}\n            </option>\n        ))}\n        </select>\n        <br/>\n        <br/>\n\n\n        <div>See Climate Data Here:\n            {' ' + currentCity + ',  '+ currentState}\n        </div>\n \n        <br/>\n        <div>\n        {currentCityClimateTD}\n        </div>\n\n        <br/>\n        <button >Go</button>\n\n    </section>\n  </>\n);\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}